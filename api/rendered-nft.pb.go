// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: rendered-nft.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRenderedNftRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ProjectId       string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TokenId         string `protobuf:"bytes,4,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetRenderedNftRequest) Reset() {
	*x = GetRenderedNftRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRenderedNftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRenderedNftRequest) ProtoMessage() {}

func (x *GetRenderedNftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRenderedNftRequest.ProtoReflect.Descriptor instead.
func (*GetRenderedNftRequest) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{0}
}

func (x *GetRenderedNftRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetRenderedNftRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetRenderedNftRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetRenderedNftRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type OpenSeaAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraitType string `protobuf:"bytes,1,opt,name=trait_type,proto3" json:"trait_type,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OpenSeaAttribute) Reset() {
	*x = OpenSeaAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSeaAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSeaAttribute) ProtoMessage() {}

func (x *OpenSeaAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSeaAttribute.ProtoReflect.Descriptor instead.
func (*OpenSeaAttribute) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{1}
}

func (x *OpenSeaAttribute) GetTraitType() string {
	if x != nil {
		return x.TraitType
	}
	return ""
}

func (x *OpenSeaAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetRenderedNftResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  *string             `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Image        string              `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	AnimationUrl string              `protobuf:"bytes,4,opt,name=animation_url,proto3" json:"animation_url,omitempty"`
	ExternalLink string              `protobuf:"bytes,5,opt,name=external_link,proto3" json:"external_link,omitempty"`
	Attributes   []*OpenSeaAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *GetRenderedNftResponse) Reset() {
	*x = GetRenderedNftResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRenderedNftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRenderedNftResponse) ProtoMessage() {}

func (x *GetRenderedNftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRenderedNftResponse.ProtoReflect.Descriptor instead.
func (*GetRenderedNftResponse) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{2}
}

func (x *GetRenderedNftResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRenderedNftResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetRenderedNftResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetRenderedNftResponse) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *GetRenderedNftResponse) GetExternalLink() string {
	if x != nil {
		return x.ExternalLink
	}
	return ""
}

func (x *GetRenderedNftResponse) GetAttributes() []*OpenSeaAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type GetCandyMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ProjectId       string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TokenId         string `protobuf:"bytes,4,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetCandyMetadataRequest) Reset() {
	*x = GetCandyMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandyMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandyMetadataRequest) ProtoMessage() {}

func (x *GetCandyMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandyMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetCandyMetadataRequest) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{3}
}

func (x *GetCandyMetadataRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetCandyMetadataRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetCandyMetadataRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetCandyMetadataRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type GetCandyMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  *string             `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Image        string              `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	AnimationUrl string              `protobuf:"bytes,4,opt,name=animation_url,proto3" json:"animation_url,omitempty"`
	ExternalLink string              `protobuf:"bytes,5,opt,name=external_link,proto3" json:"external_link,omitempty"`
	Attributes   []*OpenSeaAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *GetCandyMetadataResponse) Reset() {
	*x = GetCandyMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandyMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandyMetadataResponse) ProtoMessage() {}

func (x *GetCandyMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandyMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetCandyMetadataResponse) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{4}
}

func (x *GetCandyMetadataResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCandyMetadataResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetCandyMetadataResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetCandyMetadataResponse) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *GetCandyMetadataResponse) GetExternalLink() string {
	if x != nil {
		return x.ExternalLink
	}
	return ""
}

func (x *GetCandyMetadataResponse) GetAttributes() []*OpenSeaAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type GetCandyMetadatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ProjectId       string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TokenIds        string `protobuf:"bytes,4,opt,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
}

func (x *GetCandyMetadatasRequest) Reset() {
	*x = GetCandyMetadatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandyMetadatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandyMetadatasRequest) ProtoMessage() {}

func (x *GetCandyMetadatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandyMetadatasRequest.ProtoReflect.Descriptor instead.
func (*GetCandyMetadatasRequest) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{5}
}

func (x *GetCandyMetadatasRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetCandyMetadatasRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetCandyMetadatasRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetCandyMetadatasRequest) GetTokenIds() string {
	if x != nil {
		return x.TokenIds
	}
	return ""
}

type GetCandyMetadatasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadatas []*GetCandyMetadataResponse `protobuf:"bytes,1,rep,name=metadatas,proto3" json:"metadatas,omitempty"`
}

func (x *GetCandyMetadatasResponse) Reset() {
	*x = GetCandyMetadatasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandyMetadatasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandyMetadatasResponse) ProtoMessage() {}

func (x *GetCandyMetadatasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandyMetadatasResponse.ProtoReflect.Descriptor instead.
func (*GetCandyMetadatasResponse) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{6}
}

func (x *GetCandyMetadatasResponse) GetMetadatas() []*GetCandyMetadataResponse {
	if x != nil {
		return x.Metadatas
	}
	return nil
}

type GetAvatarMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     *string             `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Image           string              `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	AnimationUrl    string              `protobuf:"bytes,4,opt,name=animation_url,proto3" json:"animation_url,omitempty"`
	ExternalLink    string              `protobuf:"bytes,5,opt,name=external_link,proto3" json:"external_link,omitempty"`
	Attributes      []*OpenSeaAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
	BackgroundColor *string             `protobuf:"bytes,7,opt,name=background_color,proto3,oneof" json:"background_color,omitempty"`
	GlbUrl          string              `protobuf:"bytes,8,opt,name=glb_url,proto3" json:"glb_url,omitempty"`
}

func (x *GetAvatarMetadataResponse) Reset() {
	*x = GetAvatarMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarMetadataResponse) ProtoMessage() {}

func (x *GetAvatarMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetAvatarMetadataResponse) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{7}
}

func (x *GetAvatarMetadataResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAvatarMetadataResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetAvatarMetadataResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetAvatarMetadataResponse) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *GetAvatarMetadataResponse) GetExternalLink() string {
	if x != nil {
		return x.ExternalLink
	}
	return ""
}

func (x *GetAvatarMetadataResponse) GetAttributes() []*OpenSeaAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GetAvatarMetadataResponse) GetBackgroundColor() string {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return ""
}

func (x *GetAvatarMetadataResponse) GetGlbUrl() string {
	if x != nil {
		return x.GlbUrl
	}
	return ""
}

type GetAvatarMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ProjectId       string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TokenId         string `protobuf:"bytes,4,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetAvatarMetadataRequest) Reset() {
	*x = GetAvatarMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarMetadataRequest) ProtoMessage() {}

func (x *GetAvatarMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetAvatarMetadataRequest) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{8}
}

func (x *GetAvatarMetadataRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetAvatarMetadataRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetAvatarMetadataRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetAvatarMetadataRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type GetGenerativeNFTMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     *string             `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Image           string              `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	AnimationUrl    string              `protobuf:"bytes,4,opt,name=animation_url,proto3" json:"animation_url,omitempty"`
	ExternalLink    string              `protobuf:"bytes,5,opt,name=external_link,proto3" json:"external_link,omitempty"`
	Attributes      []*OpenSeaAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
	BackgroundColor *string             `protobuf:"bytes,7,opt,name=background_color,proto3,oneof" json:"background_color,omitempty"`
	GlbUrl          string              `protobuf:"bytes,8,opt,name=glb_url,proto3" json:"glb_url,omitempty"`
}

func (x *GetGenerativeNFTMetadataResponse) Reset() {
	*x = GetGenerativeNFTMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenerativeNFTMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenerativeNFTMetadataResponse) ProtoMessage() {}

func (x *GetGenerativeNFTMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenerativeNFTMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetGenerativeNFTMetadataResponse) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{9}
}

func (x *GetGenerativeNFTMetadataResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGenerativeNFTMetadataResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetGenerativeNFTMetadataResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetGenerativeNFTMetadataResponse) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *GetGenerativeNFTMetadataResponse) GetExternalLink() string {
	if x != nil {
		return x.ExternalLink
	}
	return ""
}

func (x *GetGenerativeNFTMetadataResponse) GetAttributes() []*OpenSeaAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GetGenerativeNFTMetadataResponse) GetBackgroundColor() string {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return ""
}

func (x *GetGenerativeNFTMetadataResponse) GetGlbUrl() string {
	if x != nil {
		return x.GlbUrl
	}
	return ""
}

type GetGenerativeNFTMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	TokenId         string `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetGenerativeNFTMetadataRequest) Reset() {
	*x = GetGenerativeNFTMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenerativeNFTMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenerativeNFTMetadataRequest) ProtoMessage() {}

func (x *GetGenerativeNFTMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenerativeNFTMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetGenerativeNFTMetadataRequest) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{10}
}

func (x *GetGenerativeNFTMetadataRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetGenerativeNFTMetadataRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetGenerativeNFTMetadataRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type GetClearCacheInternalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	TokenId         string `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetClearCacheInternalRequest) Reset() {
	*x = GetClearCacheInternalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClearCacheInternalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClearCacheInternalRequest) ProtoMessage() {}

func (x *GetClearCacheInternalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClearCacheInternalRequest.ProtoReflect.Descriptor instead.
func (*GetClearCacheInternalRequest) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{11}
}

func (x *GetClearCacheInternalRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetClearCacheInternalRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetClearCacheInternalRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type GetClearCacheInternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetClearCacheInternalResponse) Reset() {
	*x = GetClearCacheInternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rendered_nft_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClearCacheInternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClearCacheInternalResponse) ProtoMessage() {}

func (x *GetClearCacheInternalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rendered_nft_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClearCacheInternalResponse.ProtoReflect.Descriptor instead.
func (*GetClearCacheInternalResponse) Descriptor() ([]byte, []int) {
	return file_rendered_nft_proto_rawDescGZIP(), []int{12}
}

func (x *GetClearCacheInternalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_rendered_nft_proto protoreflect.FileDescriptor

var file_rendered_nft_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x2d, 0x6e, 0x66, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8c, 0x02,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x66, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x45, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x45, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x65, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x68, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x6e, 0x64, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x22, 0xef, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x45, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6c, 0x62, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6c, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x64, 0x22, 0xf6, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x4e, 0x46, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x45, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x65, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x10, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x6c, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6c,
	0x62, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x54, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22,
	0x7f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64,
	0x22, 0x39, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rendered_nft_proto_rawDescOnce sync.Once
	file_rendered_nft_proto_rawDescData = file_rendered_nft_proto_rawDesc
)

func file_rendered_nft_proto_rawDescGZIP() []byte {
	file_rendered_nft_proto_rawDescOnce.Do(func() {
		file_rendered_nft_proto_rawDescData = protoimpl.X.CompressGZIP(file_rendered_nft_proto_rawDescData)
	})
	return file_rendered_nft_proto_rawDescData
}

var file_rendered_nft_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_rendered_nft_proto_goTypes = []interface{}{
	(*GetRenderedNftRequest)(nil),            // 0: api.renderinghub.io.GetRenderedNftRequest
	(*OpenSeaAttribute)(nil),                 // 1: api.renderinghub.io.OpenSeaAttribute
	(*GetRenderedNftResponse)(nil),           // 2: api.renderinghub.io.GetRenderedNftResponse
	(*GetCandyMetadataRequest)(nil),          // 3: api.renderinghub.io.GetCandyMetadataRequest
	(*GetCandyMetadataResponse)(nil),         // 4: api.renderinghub.io.GetCandyMetadataResponse
	(*GetCandyMetadatasRequest)(nil),         // 5: api.renderinghub.io.GetCandyMetadatasRequest
	(*GetCandyMetadatasResponse)(nil),        // 6: api.renderinghub.io.GetCandyMetadatasResponse
	(*GetAvatarMetadataResponse)(nil),        // 7: api.renderinghub.io.GetAvatarMetadataResponse
	(*GetAvatarMetadataRequest)(nil),         // 8: api.renderinghub.io.GetAvatarMetadataRequest
	(*GetGenerativeNFTMetadataResponse)(nil), // 9: api.renderinghub.io.GetGenerativeNFTMetadataResponse
	(*GetGenerativeNFTMetadataRequest)(nil),  // 10: api.renderinghub.io.GetGenerativeNFTMetadataRequest
	(*GetClearCacheInternalRequest)(nil),     // 11: api.renderinghub.io.GetClearCacheInternalRequest
	(*GetClearCacheInternalResponse)(nil),    // 12: api.renderinghub.io.GetClearCacheInternalResponse
}
var file_rendered_nft_proto_depIdxs = []int32{
	1, // 0: api.renderinghub.io.GetRenderedNftResponse.attributes:type_name -> api.renderinghub.io.OpenSeaAttribute
	1, // 1: api.renderinghub.io.GetCandyMetadataResponse.attributes:type_name -> api.renderinghub.io.OpenSeaAttribute
	4, // 2: api.renderinghub.io.GetCandyMetadatasResponse.metadatas:type_name -> api.renderinghub.io.GetCandyMetadataResponse
	1, // 3: api.renderinghub.io.GetAvatarMetadataResponse.attributes:type_name -> api.renderinghub.io.OpenSeaAttribute
	1, // 4: api.renderinghub.io.GetGenerativeNFTMetadataResponse.attributes:type_name -> api.renderinghub.io.OpenSeaAttribute
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_rendered_nft_proto_init() }
func file_rendered_nft_proto_init() {
	if File_rendered_nft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rendered_nft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRenderedNftRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSeaAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRenderedNftResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandyMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandyMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandyMetadatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandyMetadatasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenerativeNFTMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenerativeNFTMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClearCacheInternalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rendered_nft_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClearCacheInternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rendered_nft_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_rendered_nft_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_rendered_nft_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_rendered_nft_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rendered_nft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rendered_nft_proto_goTypes,
		DependencyIndexes: file_rendered_nft_proto_depIdxs,
		MessageInfos:      file_rendered_nft_proto_msgTypes,
	}.Build()
	File_rendered_nft_proto = out.File
	file_rendered_nft_proto_rawDesc = nil
	file_rendered_nft_proto_goTypes = nil
	file_rendered_nft_proto_depIdxs = nil
}
