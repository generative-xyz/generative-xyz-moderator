// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/redis": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.RedisResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Upsert Redis",
                "parameters": [
                    {
                        "description": "Upsert redis key",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertRedisRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/admin/redis/{key}": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/nonce": {
            "post": {
                "description": "Generate a message for user's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Generate a message",
                "parameters": [
                    {
                        "description": "Generate message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.GeneratedMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/nonce/verify": {
            "post": {
                "description": "Verified the generated message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verified the generated message",
                "parameters": [
                    {
                        "description": "Verify message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VerifyMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.VerifyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get Categorys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Categorys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "create Category",
                "parameters": [
                    {
                        "description": "Create a Category",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "get one Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "get one Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "update Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "update Category",
                "parameters": [
                    {
                        "description": "Create a Category",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCategoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "delete Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "delete Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/configs": {
            "get": {
                "description": "Get configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "Get configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "create config",
                "parameters": [
                    {
                        "description": "Create a config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/configs/{key}": {
            "get": {
                "description": "get one config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "get one config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "delete config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "delete config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload file",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/deflate": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Deflate a string",
                "tags": [
                    "Files"
                ],
                "summary": "Deflate a string",
                "parameters": [
                    {
                        "description": "Data for minify",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.DeflateDataResp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/structure.DeflateDataResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/minify": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload file",
                "tags": [
                    "Files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "description": "Data for minify",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.MinifyDataResp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/marketplace/listing/{genNFTAddr}/token/{tokenID}": {
            "get": {
                "description": "Get market place listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get market place listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "genNFTAddrress",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "closed",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "finished",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/offers/{genNFTAddr}/token/{tokenID}": {
            "get": {
                "description": "Get market place offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get market place offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "genNFTAddrress",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "closed",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "finished",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/stats/{genNFTAddr}": {
            "get": {
                "description": "get project's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "get project's detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gen NFT Addr",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/wallet/{walletAddress}/listing": {
            "get": {
                "description": "User profile's selling nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "User profile's selling nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/marketplace/wallet/{walletAddress}/offer": {
            "get": {
                "description": "User profile's selling nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "User profile's selling nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/nfts/{contractAddress}/transactions/{tokenID}": {
            "get": {
                "description": "get nft transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nfts"
                ],
                "summary": "get nft transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "User profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Edit User profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Edit User profile",
                "parameters": [
                    {
                        "description": "Update profile request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/logout": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.LogoutResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/projects": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "get current user's projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "get current user's projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}": {
            "get": {
                "description": "User profile via wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile via wallet address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/nfts": {
            "get": {
                "description": "User profile's nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile's nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gen_nft_address",
                        "name": "gen_nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "creator_address",
                        "name": "creator_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, priority-asc, priority-desc",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/projects": {
            "get": {
                "description": "get  projects by wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "get  projects by wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via wallet address",
                        "name": "walletAddress",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "description": "get projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, priority-asc, priority-desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "Create profile request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/minted-out": {
            "get": {
                "description": "get minted out projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get minted out projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/random": {
            "get": {
                "description": "get the random projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get the random projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/recent-works": {
            "get": {
                "description": "get the recent work projects (posible of minted out)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get the recent work projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/tokens/{projectID}": {
            "get": {
                "description": "get project's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/{projectID}": {
            "put": {
                "description": "Update projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "description": "Create profile request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProjectReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "contract adress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "projectID adress",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{genNFTAddr}/tokens": {
            "get": {
                "description": "get tokens by project address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gen_nft_address",
                        "name": "gen_nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "creator_address",
                        "name": "creator_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "attributes",
                        "name": "attributes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "This is provided from Project Detail API",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/token/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token uri data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token for Opensea"
                ],
                "summary": "get token uri data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Capture timeout",
                        "name": "captureTimeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tokens": {
            "get": {
                "description": "get tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gen_nft_address",
                        "name": "gen_nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "creator_address",
                        "name": "creator_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, priority-asc, priority-desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/tokens/traits/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token's traits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get token's traits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenTraitsResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tokens/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token uri data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get token uri data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Capture timeout",
                        "name": "captureTimeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "get token uri data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get token uri data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTokentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/trait/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token's traits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token for Opensea"
                ],
                "summary": "get token's traits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenTraitsResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CreateConfigRequest": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.CreateProjectReq": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contractAddress": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenID": {
                    "type": "string"
                }
            }
        },
        "request.GenerateMessageRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "request.ProfileSocial": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "string"
                },
                "etherScan": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "request.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "profileSocial": {
                    "$ref": "#/definitions/request.ProfileSocial"
                }
            }
        },
        "request.UpdateProjectReq": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                }
            }
        },
        "request.UpdateTokentReq": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                }
            }
        },
        "request.UpsertRedisRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.VerifyMessageRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "response.CategoryResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.ConfigResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.FileRes": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "uploadedBy": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "response.GeneratedMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.InternalTokenTraitsResp": {
            "type": "object",
            "properties": {
                "attributes": {}
            }
        },
        "response.InternalTokenURIResp": {
            "type": "object",
            "properties": {
                "animationUrl": {
                    "type": "string"
                },
                "attributes": {},
                "creator": {
                    "$ref": "#/definitions/response.ProfileResponse"
                },
                "description": {
                    "type": "string"
                },
                "genNFTAddr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "mintedTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/response.ProfileResponse"
                },
                "ownerAddr": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "project": {
                    "$ref": "#/definitions/response.ProjectResp"
                },
                "thumbnail": {
                    "type": "string"
                },
                "tokenID": {
                    "type": "string"
                }
            }
        },
        "response.JsonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/response.RespondErr"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.NftMintingDetail": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "indexReserve": {
                    "type": "integer"
                }
            }
        },
        "response.ProfileResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "profileSocial": {
                    "$ref": "#/definitions/response.ProfileSocial"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "response.ProfileSocial": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "string"
                },
                "etherScan": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "response.ProjectResp": {
            "type": "object",
            "properties": {
                "blockNumberMinted": {
                    "type": "string"
                },
                "completeTime": {
                    "type": "integer"
                },
                "contractAddress": {
                    "type": "string"
                },
                "creatorAddr": {
                    "type": "string"
                },
                "creatorProfile": {
                    "$ref": "#/definitions/response.ProfileResponse"
                },
                "desc": {
                    "type": "string"
                },
                "genNFTAddr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "itemDesc": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "maxSupply": {
                    "type": "integer"
                },
                "mintPrice": {
                    "type": "string"
                },
                "mintPriceAddr": {
                    "type": "string"
                },
                "mintedTime": {
                    "type": "string"
                },
                "mintingInfo": {
                    "$ref": "#/definitions/response.NftMintingDetail"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "projectURI": {
                    "type": "string"
                },
                "reservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "royalty": {
                    "type": "integer"
                },
                "scriptType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "social": {},
                "stats": {
                    "$ref": "#/definitions/response.ProjectStatResp"
                },
                "status": {
                    "type": "boolean"
                },
                "styles": {
                    "type": "string"
                },
                "tokenID": {
                    "type": "string"
                },
                "traitStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TraitStat"
                    }
                }
            }
        },
        "response.ProjectStatResp": {
            "type": "object",
            "properties": {
                "bestMakeOfferPrice": {
                    "type": "string"
                },
                "floorPrice": {
                    "type": "string"
                },
                "listedPercent": {
                    "type": "integer"
                },
                "totalTradingVolumn": {
                    "type": "string"
                },
                "uniqueOwnerCount": {
                    "type": "integer"
                }
            }
        },
        "response.RedisResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "response.RespondErr": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TokenTraitsResp": {
            "type": "object",
            "properties": {
                "attributes": {}
            }
        },
        "response.TokenURIResp": {
            "type": "object",
            "properties": {
                "animation_url": {
                    "type": "string"
                },
                "attributes": {},
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.TraitStat": {
            "type": "object",
            "properties": {
                "traitName": {
                    "type": "string"
                },
                "traitValuesStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TraitValueStat"
                    }
                }
            }
        },
        "response.TraitValueStat": {
            "type": "object",
            "properties": {
                "rarity": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.VerifyResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "structure.DeflateDataResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "structure.FileContentReq": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "deflate": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "string"
                }
            }
        },
        "structure.MinifyDataResp": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/structure.FileContentReq"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Api-Key": {
            "type": "apiKey",
            "name": "Api-Key",
            "in": "header"
        },
        "Authorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/rederinghub.io/v1",
	Schemes:          []string{},
	Title:            "Generative.xyz APIs",
	Description:      "This is a sample server Autonomous devices management server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
