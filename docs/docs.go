// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin-test": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.RedisResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/admin/auto-listing": {
            "post": {
                "description": "Auto listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Auto listing",
                "parameters": [
                    {
                        "description": " Auto listing",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ListNftIdsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/admin/redis": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.RedisResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Upsert Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Upsert Redis",
                "parameters": [
                    {
                        "description": "Upsert redis key",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpsertRedisRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/admin/redis/{key}": {
            "get": {
                "description": "Get Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RedisResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/nonce": {
            "post": {
                "description": "Generate a message for user's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Generate a message",
                "parameters": [
                    {
                        "description": "Generate message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.GeneratedMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/nonce/verify": {
            "post": {
                "description": "Verified the generated message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verified the generated message",
                "parameters": [
                    {
                        "description": "Verify message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VerifyMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.VerifyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/btc/balance": {
            "post": {
                "description": "mint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BTC"
                ],
                "summary": "BTC mint",
                "parameters": [
                    {
                        "description": "Check balance of ORD_WALLET_ADDRESS",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CheckBalanceAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/btc/receive-address": {
            "post": {
                "description": "Generate receive wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BTC"
                ],
                "summary": "BTC Generate receive wallet address",
                "parameters": [
                    {
                        "description": "Create a btc wallet address request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBtcWalletAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get Categorys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Categorys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "create Category",
                "parameters": [
                    {
                        "description": "Create a Category",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "get one Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "get one Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "update Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "update Category",
                "parameters": [
                    {
                        "description": "Create a Category",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCategoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "delete Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "delete Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/charts/collections/{projectID}/charts": {
            "get": {
                "description": "get list CollectionListing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionListing"
                ],
                "summary": "CollectionListing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "projectID",
                        "name": "projectID",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "dateRange",
                        "name": "dateRange",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/charts/tokens/{tokenID}/charts": {
            "get": {
                "description": "TokenURI's chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charts"
                ],
                "summary": "TokenURI's chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dateRange",
                        "name": "dateRange",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "description": "get list tokens og a collection and respond data for chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionListing"
                ],
                "summary": "Collection's chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/collections/items": {
            "get": {
                "description": "get list CollectionListing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionListing"
                ],
                "summary": "CollectionListing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/collections/on-sale-items": {
            "get": {
                "description": "get list CollectionListing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionListing"
                ],
                "summary": "CollectionListing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/collections/sub-collection-items": {
            "get": {
                "description": "get list CollectionListing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionListing"
                ],
                "summary": "CollectionListing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number_from",
                        "name": "number_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number_to",
                        "name": "number_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/configs": {
            "get": {
                "description": "Get configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "Get configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "create config",
                "parameters": [
                    {
                        "description": "Create a config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/configs/{key}": {
            "get": {
                "description": "get one config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "get one config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "delete config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "delete config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ConfigResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dao-artist": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List DAO Artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Artist"
                ],
                "summary": "List DAO Artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last Id",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pagination"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create DAO Artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Artist"
                ],
                "summary": "Create DAO Artist",
                "parameters": [
                    {
                        "description": "Create Dao Artist Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDaoArtistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/dao-artist/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get DAO Artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Artist"
                ],
                "summary": "Get DAO Artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DAO Artist Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Vote DAO Artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Artist"
                ],
                "summary": "Vote DAO Artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DAO Artist Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote Dao Artist Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VoteDaoArtistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/dao-project": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List DAO Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Project"
                ],
                "summary": "List DAO Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last Id",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pagination"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create DAO Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Project"
                ],
                "summary": "Create DAO Project",
                "parameters": [
                    {
                        "description": "Create Dao Project Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDaoProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/dao-project/me/projects-hidden": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List Projects Is Hidden",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Project"
                ],
                "summary": "List Projects Is Hidden",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last Id",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pagination"
                        }
                    }
                }
            }
        },
        "/dao-project/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get DAO Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Project"
                ],
                "summary": "Get DAO Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dao Project Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DaoProject"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Vote DAO Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO Project"
                ],
                "summary": "Vote DAO Project",
                "parameters": [
                    {
                        "description": "Vote Dao Project Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VoteDaoProjectRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Dao Project Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/dao/proposals": {
            "get": {
                "description": "DAO list proposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO"
                ],
                "summary": "DAO list proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by proposer",
                        "name": "proposer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by proposalID",
                        "name": "proposalID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, token-price-asc, token-price-desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "DAO create a draft proposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO"
                ],
                "summary": "DAO create a draft proposal",
                "parameters": [
                    {
                        "description": "Create a draft proposal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProposalReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals/{ID}/{proposalID}": {
            "put": {
                "description": "DAO off and onchain proposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO"
                ],
                "summary": "DAO map off and onchain proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID: the offChain ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "proposalID: the onchain ID",
                        "name": "proposalID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals/{proposalID}": {
            "get": {
                "description": "DAO proposal's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO"
                ],
                "summary": "DAO proposal's detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "proposalID: the onchain ID",
                        "name": "proposalID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/dao/proposals/{proposalID}/votes": {
            "get": {
                "description": "DAO proposal's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DAO"
                ],
                "summary": "DAO proposal's votes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "proposalID: the onchain ID",
                        "name": "proposalID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter by voter",
                        "name": "voter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by support",
                        "name": "support",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, token-price-asc, token-price-desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/developer/get-api-key": {
            "get": {
                "security": [
                    {
                        "No Authorization": []
                    }
                ],
                "description": "Get an api key for developer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "developer"
                ],
                "summary": "Get api key for developer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.DeveloperKey"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Generate an api key for developer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "developer"
                ],
                "summary": "Generate an api key for developer",
                "parameters": [
                    {
                        "description": "Request API key",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetApiKeyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/developer/inscribe": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC List Inscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC List Inscribe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pagination"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "api-key": []
                    }
                ],
                "description": "BTC Generate receive wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC Generate receive wallet address",
                "parameters": [
                    {
                        "description": "Create mint request for dev",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeveloperCreateInscribeBtcReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InscribeBtcResp"
                        }
                    }
                }
            }
        },
        "/developer/inscribe/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC NFT Detail Inscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC NFT Detail Inscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscribe ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.InscribeBTCResp"
                        }
                    }
                }
            }
        },
        "/discord/new-bid": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "send new bid notification",
                "tags": [
                    "Discord"
                ],
                "summary": "send new bid notification",
                "parameters": [
                    {
                        "description": "Data for minify",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendNewBidNotifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/eth/receive-address": {
            "post": {
                "description": "Generate receive wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ETH"
                ],
                "summary": "ETH Generate receive wallet address",
                "parameters": [
                    {
                        "description": "Create a eth wallet address request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEthWalletAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/eth/receive-address/whitelist": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Generate receive wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ETH"
                ],
                "summary": "ETH Generate receive wallet address",
                "parameters": [
                    {
                        "description": "Create a eth wallet address request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateWhitelistedEthWalletAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/fcm/token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "FCM Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FCM"
                ],
                "summary": "FCM Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device Type",
                        "name": "device_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.FirebaseRegistrationToken"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create FCM Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FCM"
                ],
                "summary": "Create FCM Token",
                "parameters": [
                    {
                        "description": "Create fcm request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateFcmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/fcm/token/data": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create FCM Token Test Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FCM"
                ],
                "summary": "Create FCM Token Test Data",
                "parameters": [
                    {
                        "description": "Create fcm test data request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateFcmDataTest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/files": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload file",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/deflate": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Deflate a string",
                "tags": [
                    "Files"
                ],
                "summary": "Deflate a string",
                "parameters": [
                    {
                        "description": "Data for minify",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.DeflateDataResp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/structure.DeflateDataResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/image/resize": {
            "post": {
                "description": "Upload file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "description": "Base64 File Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileResize"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/request.FileResize"
                        }
                    }
                }
            }
        },
        "/files/minify": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload file",
                "tags": [
                    "Files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "description": "Data for minify",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.MinifyDataResp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/multipart": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create multipart upload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Create multipart upload",
                "parameters": [
                    {
                        "description": "Create multipart upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateMultipartUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/multipart/{uploadID}": {
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload multipart file",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload multipart file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "upload ID",
                        "name": "uploadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "part number",
                        "name": "partNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Finish multipart upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Finish multipart upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "upload ID",
                        "name": "uploadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.MultipartUploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/inscribe/compress-image": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "compress-image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compress-image"
                ],
                "summary": "compress-image",
                "parameters": [
                    {
                        "description": "compress images",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CompressImageReq"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/inscribe/info/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC Info Inscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC Info Inscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscribe ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InscribeInfoResp"
                        }
                    }
                }
            }
        },
        "/inscribe/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC List Inscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC List Inscribe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pagination"
                        }
                    }
                }
            }
        },
        "/inscribe/nft-detail/{ID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC NFT Detail Inscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC NFT Detail Inscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscribe ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.InscribeBTCResp"
                        }
                    }
                }
            }
        },
        "/inscribe/receive-address": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC Generate receive wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC Generate receive wallet address",
                "parameters": [
                    {
                        "description": "Create a btc wallet address request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateInscribeBtcReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InscribeBtcResp"
                        }
                    }
                }
            }
        },
        "/inscribe/retry/{ID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "BTC Retry Inscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inscribe"
                ],
                "summary": "BTC Retry Inscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscribe ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/marketplace/listing/{genNFTAddr}/token/{tokenID}": {
            "get": {
                "description": "Get market place listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get market place listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "genNFTAddrress",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "closed",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "finished",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/offers/{genNFTAddr}/token/{tokenID}": {
            "get": {
                "description": "Get market place offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "Get market place offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "genNFTAddrress",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tokenID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "closed",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true|false, default all",
                        "name": "finished",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/stats/{genNFTAddr}": {
            "get": {
                "description": "get project's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "get project's detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gen NFT Addr",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/stats/{genNFTAddr}/first-sale": {
            "get": {
                "description": "get project's first-sale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "get project's first-sale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gen NFT Addr",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ignore cache",
                        "name": "refresh",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/marketplace/wallet/{walletAddress}/listing": {
            "get": {
                "description": "User profile's selling nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "User profile's selling nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/marketplace/wallet/{walletAddress}/offer": {
            "get": {
                "description": "User profile's selling nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MarketPlace"
                ],
                "summary": "User profile's selling nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "If is_nft_owner == true, get offer that offer to walletAddress's nft",
                        "name": "is_nft_owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1: ASC, -1: DESC",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page start with 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/mint-nft-btc/receive-address": {
            "post": {
                "description": "Generate receive wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BTC/ETH"
                ],
                "summary": "BTC/ETH Generate receive wallet address",
                "parameters": [
                    {
                        "description": "Create a btc/eth wallet address request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBtcWalletAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "cancel the mint request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BTC/ETH"
                ],
                "summary": "cancel the mint request",
                "parameters": [
                    {
                        "description": "Create a btc/eth wallet address request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBtcWalletAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nfts/{contractAddress}/nft_holders": {
            "get": {
                "description": "get token holder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blockchain"
                ],
                "summary": "get token holder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/nfts/{contractAddress}/transactions/{tokenID}": {
            "get": {
                "description": "get nft transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blockchain"
                ],
                "summary": "get nft transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/ordinal/collections": {
            "post": {
                "description": "Upload ordinal template",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Ordinal collection"
                ],
                "summary": "Upload ordinal template",
                "parameters": [
                    {
                        "type": "file",
                        "description": "project.zip",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/ordinal/collections/template": {
            "get": {
                "description": "get ordinal template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ordinal collection"
                ],
                "summary": "get ordinal template",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CategoryResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/photo/capture": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "captures url content as image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photographer"
                ],
                "summary": "captures url content as image",
                "parameters": [
                    {
                        "description": "capture request",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CaptureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.CaptureResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "User profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Edit User profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Edit User profile",
                "parameters": [
                    {
                        "description": "Update profile request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/logout": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.LogoutResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/projects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get current user's projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get current user's projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ProjectResp"
                            }
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}": {
            "get": {
                "description": "User profile via wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile via wallet address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/nfts": {
            "get": {
                "description": "User profile's nft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile's nft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "walletAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gen_nft_address",
                        "name": "gen_nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "creator_address",
                        "name": "creator_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, priority-asc, priority-desc",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/projects": {
            "get": {
                "description": "get  projects by wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "get  projects by wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via wallet address",
                        "name": "walletAddress",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isSynced",
                        "name": "isSynced",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/wallet/{walletAddress}/volumn": {
            "get": {
                "description": "get volume by wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "get volume by wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via wallet address",
                        "name": "walletAddress",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "payType eth|btc",
                        "name": "payType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/profile/withdraw": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "User profile via wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "User profile via wallet address",
                "parameters": [
                    {
                        "description": "Withdraw request",
                        "name": "WithDrawItemRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WithDrawItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "description": "get projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via category ids",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, oldest, priority-asc, priority-desc, trending-score",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ETH Project"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "Create eth-project request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateETHProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/all": {
            "get": {
                "description": "get all projects without project's status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get all projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via category ids",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "txHash",
                        "name": "txHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "commitTxHash",
                        "name": "commitTxHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "txHex",
                        "name": "txHex",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "revealTxHash",
                        "name": "revealTxHash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isSynced",
                        "name": "isSynced",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isHidden",
                        "name": "isHidden",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, oldest, priority-asc, priority-desc, trending-score",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/btc": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create btc project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create btc project",
                "parameters": [
                    {
                        "description": "Create profile request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBTCProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/btc/files": {
            "post": {
                "description": "Upload images for a project",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Upload images for a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project's name",
                        "name": "projectName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FileRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/project/minted-out": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/random": {
            "get": {
                "description": "get the random projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get the random projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/recent-works": {
            "get": {
                "description": "get the recent work projects (posible of minted out)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get the recent work projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/upcomming": {
            "get": {
                "description": "upcomming get projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get upcomming projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "contractAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter project via category ids",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, oldest, priority-asc, priority-desc, trending-score",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/tokens/{projectID}": {
            "get": {
                "description": "get project's detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "update btc project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "update a btc project",
                "parameters": [
                    {
                        "description": "Update project request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateBTCProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/tokens/{projectID}/random-images": {
            "get": {
                "description": "get project's random-images",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's random-images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "payType eth|btc",
                        "name": "payType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/tokens/{projectID}/token-traits": {
            "get": {
                "description": "get project's token-traits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's token-traits",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "only tokens which don't have any trait are exported",
                        "name": "empty-trait",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "upload project's token-traits",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "upload project's token-traits",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/tokens/{projectID}/volumn": {
            "get": {
                "description": "get project's volumn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's volumn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "payType eth|btc",
                        "name": "payType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractAddress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/tx-hash/{txHash}": {
            "put": {
                "description": "Update project's hash via txHasg",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project's hash",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.UpdateProjectHash"
                        }
                    },
                    {
                        "type": "string",
                        "description": "contract adress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "txHash adress",
                        "name": "txHash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/{projectID}": {
            "put": {
                "description": "Update projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "description": "Create profile request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProjectReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "contract adress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "projectID adress",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Delete BTC projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete BTC project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract adress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "projectID adress",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/{projectID}/allow-list": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Check project's allow list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Check project's allow list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress request",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "projectID request",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create project's allow list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create project's allow list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contractAddress request",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "projectID request",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/{projectID}/categories": {
            "put": {
                "description": "Update project's categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project's categories",
                "parameters": [
                    {
                        "description": "UpdateBTCProjectCategoriesReq",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateBTCProjectCategoriesReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "contract adress",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "projectID adress",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/{projectID}/token": {
            "get": {
                "description": "Search Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "projectID request",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contractAddress request",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{contractAddress}/{projectID}/token-onwers/analytics": {
            "get": {
                "description": "Calculate Token's Onwers by project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Calculate Token's Onwers by project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "projectID request",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "contractAddress request",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{genNFTAddr}/tokens": {
            "get": {
                "description": "get tokens by project address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project's tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gen_nft_address",
                        "name": "gen_nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "creator_address",
                        "name": "creator_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "attributes",
                        "name": "attributes",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "has_price",
                        "name": "has_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from_price",
                        "name": "from_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to_price",
                        "name": "to_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, token-price-asc, token-price-desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "This is provided from Project Detail API",
                        "name": "genNFTAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/project/{projectID}/report": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Update projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "projectID adress",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Report Project request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReportProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/referrals": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "get referrals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "get referrals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by referrerID",
                        "name": "referrerID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by referreeID",
                        "name": "referreeID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by amountType",
                        "name": "amountType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/referrals/{referrerID}": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create referral",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "Create referral",
                "parameters": [
                    {
                        "type": "string",
                        "description": "referrerID",
                        "name": "referrerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "object type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/token-activities": {
            "get": {
                "description": "get referrals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token Activities"
                ],
                "summary": "get referrals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token inscription ID",
                        "name": "inscription_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "project",
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "activity types",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/token-moralis/nfts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List NFT from Moralis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token Moralis"
                ],
                "summary": "List NFT from Moralis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "walletAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last Id",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pagination"
                        }
                    }
                }
            }
        },
        "/token-moralis/nfts/{tokenAddress}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "NFT from Moralis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token Moralis"
                ],
                "summary": "NFT from Moralis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token Address",
                        "name": "tokenAddress",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Token Id",
                        "name": "tokenId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nfts.MoralisToken"
                        }
                    }
                }
            }
        },
        "/token-uri": {
            "get": {
                "description": "get tokenUris",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TokenUri"
                ],
                "summary": "get list tokenUris",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/token/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token uri data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token for Opensea"
                ],
                "summary": "get token uri data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Capture timeout",
                        "name": "captureTimeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tokens": {
            "get": {
                "description": "get tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract_address",
                        "name": "contract_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gen_nft_address",
                        "name": "gen_nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "creator_address",
                        "name": "creator_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter via tokenID",
                        "name": "tokenID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "newest, minted-newest, priority-asc, priority-desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The cursor returned in the previous response (used for getting the next page).",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/tokens/traits/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token's traits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get token's traits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenTraitsResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tokens/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token uri data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get token uri data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Capture timeout",
                        "name": "captureTimeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "get token uri data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "get token uri data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTokentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tokens/{tokenID}/thumbnail": {
            "post": {
                "description": "Update token's thumbnail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "Update token's thumbnail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTokenThumbnailReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.InternalTokenURIResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/trait/{contractAddress}/{tokenID}": {
            "get": {
                "description": "get token's traits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token for Opensea"
                ],
                "summary": "get token's traits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token ID",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenTraitsResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter project via contract address",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        },
        "/user/artist": {
            "get": {
                "description": "get list Artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get list Artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JsonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dao_artist.Status": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Verifying",
                "Verified"
            ]
        },
        "dao_artist_voted.Status": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Report",
                "Verify"
            ]
        },
        "dao_project.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Voting",
                "Executed",
                "Defeated"
            ]
        },
        "dao_project_voted.Status": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Against",
                "Voted"
            ]
        },
        "entity.AuctionWinnerList": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "ethAddress": {
                    "type": "string"
                },
                "mintPrice": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.BaseEntity": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "entity.DeveloperKey": {
            "type": "object",
            "properties": {
                "apiCompany": {
                    "type": "string"
                },
                "apiDescription": {
                    "type": "string"
                },
                "apiEmail": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiName": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "userUuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "entity.FirebaseRegistrationToken": {
            "type": "object",
            "properties": {
                "base_entity": {
                    "$ref": "#/definitions/entity.BaseEntity"
                },
                "created_at": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "registration_token": {
                    "type": "string"
                },
                "user_wallet": {
                    "type": "string"
                }
            }
        },
        "entity.InscribeBTCResp": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "expiredAt": {
                    "type": "string"
                },
                "feeRate": {
                    "type": "integer"
                },
                "inscriptionID": {
                    "description": "tokenID in ETH",
                    "type": "string"
                },
                "isAuthentic": {
                    "type": "boolean"
                },
                "isConfirm": {
                    "description": "default: false, if OrdAddress get all amount it will be set true",
                    "type": "boolean"
                },
                "isMinted": {
                    "description": "default: false. If InscriptionID exist which means token is minted, it's true",
                    "type": "boolean"
                },
                "isSuccess": {
                    "description": "default: false. If InscriptionID was sent to user, it's true",
                    "type": "boolean"
                },
                "projectTokenId": {
                    "type": "string"
                },
                "status": {
                    "description": "status for record",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.StatusInscribe"
                        }
                    ]
                },
                "tokenAddress": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "txMintNft": {
                    "type": "string"
                },
                "txSendBtc": {
                    "type": "string"
                },
                "txSendNft": {
                    "type": "string"
                },
                "userUuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "entity.MintedImages": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "string"
                },
                "fees": {
                    "type": "integer"
                },
                "inscription": {
                    "type": "string"
                },
                "isSent": {
                    "type": "boolean"
                },
                "mintedAt": {
                    "type": "string"
                },
                "reveal": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "entity.Pagination": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "result": {},
                "sort": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Sort"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "entity.ProfileSocial": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "string"
                },
                "ether_scan": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "twitterVerified": {
                    "type": "boolean"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "entity.ProjectMintingInfo": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "indexReverse": {
                    "type": "integer"
                }
            }
        },
        "entity.ProjectStat": {
            "type": "object",
            "properties": {
                "bestMakeOfferPrice": {
                    "type": "string"
                },
                "floorPrice": {
                    "type": "string"
                },
                "lastTimeSynced": {
                    "type": "string"
                },
                "listedPercent": {
                    "type": "integer"
                },
                "mintedCount": {
                    "type": "integer"
                },
                "totalTradingVolumn": {
                    "description": "TODO add other stats here",
                    "type": "string"
                },
                "trendingScore": {
                    "type": "integer"
                },
                "uniqueOwnerCount": {
                    "type": "integer"
                }
            }
        },
        "entity.Projects": {
            "type": "object",
            "properties": {
                "animationHtml": {
                    "type": "string"
                },
                "auctionWinnerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.AuctionWinnerList"
                    }
                },
                "block_number_minted": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "catureThumbnailDelayTime": {
                    "type": "integer"
                },
                "closeMintUnixTimestamp": {
                    "type": "integer"
                },
                "commitTxHash": {
                    "type": "string"
                },
                "completeTime": {
                    "type": "integer"
                },
                "contractAddress": {
                    "type": "string"
                },
                "created_by_collection_meta": {
                    "type": "boolean"
                },
                "creatorAddrr": {
                    "type": "string"
                },
                "creatorAddrrBTC": {
                    "type": "string"
                },
                "creatorName": {
                    "type": "string"
                },
                "creatorProfile": {
                    "$ref": "#/definitions/entity.Users"
                },
                "description": {
                    "type": "string"
                },
                "fromAuthentic": {
                    "type": "boolean"
                },
                "genNFTAddr": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "htmlFile": {
                    "type": "string"
                },
                "images": {
                    "description": "if user uses links instead of animation URL",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inscribedBy": {
                    "type": "string"
                },
                "inscriptionIcon": {
                    "type": "string"
                },
                "isFullChain": {
                    "type": "boolean"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "isSynced": {
                    "type": "boolean"
                },
                "license": {
                    "type": "string"
                },
                "limitMintPerProcess": {
                    "type": "integer"
                },
                "limitSupply": {
                    "type": "integer"
                },
                "maxFileSize": {
                    "type": "integer"
                },
                "maxSupply": {
                    "type": "integer"
                },
                "mintFee": {
                    "type": "integer"
                },
                "mintPrice": {
                    "type": "string"
                },
                "mintPriceEth": {
                    "type": "string"
                },
                "mintTokenAddress": {
                    "type": "string"
                },
                "mintedImages": {
                    "description": "if user uses links instead of animation URL",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MintedImages"
                    }
                },
                "minted_time": {
                    "type": "string"
                },
                "mintingInfo": {
                    "$ref": "#/definitions/entity.ProjectMintingInfo"
                },
                "name": {
                    "type": "string"
                },
                "networkFee": {
                    "type": "string"
                },
                "networkFeeEth": {
                    "type": "string"
                },
                "nftTokenUri": {
                    "type": "string"
                },
                "openMintUnixTimestamp": {
                    "type": "integer"
                },
                "ordinalsTx": {
                    "type": "string"
                },
                "ownerOf": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "processingImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reportUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ReportProject"
                    }
                },
                "reserveMintLimit": {
                    "type": "integer"
                },
                "reserveMintPrice": {
                    "type": "string"
                },
                "reservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "revealTxHash": {
                    "type": "string"
                },
                "royalty": {
                    "type": "integer"
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "socialDiscord": {
                    "type": "string"
                },
                "socialInstagram": {
                    "type": "string"
                },
                "socialMedium": {
                    "type": "string"
                },
                "socialTwitter": {
                    "type": "string"
                },
                "socialWeb": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/entity.ProjectStat"
                },
                "status": {
                    "type": "boolean"
                },
                "styles": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thirdPartyScripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail": {
                    "type": "string"
                },
                "tokenAddress": {
                    "type": "string"
                },
                "tokenDescription": {
                    "type": "string"
                },
                "tokenID": {
                    "type": "string"
                },
                "tokenIDInt": {
                    "type": "integer"
                },
                "tokenId": {
                    "type": "string"
                },
                "traceID": {
                    "description": "TO find log easily",
                    "type": "string"
                },
                "traitsStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TraitStat"
                    }
                },
                "txHash": {
                    "type": "string"
                },
                "txHex": {
                    "type": "string"
                },
                "whiteListEthContracts": {
                    "description": "if user uses links instead of animation URL",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.ReportProject": {
            "type": "object",
            "properties": {
                "originalLink": {
                    "type": "string"
                },
                "reportUserAddress": {
                    "type": "string"
                }
            }
        },
        "entity.Sort": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entity.SortType"
                }
            }
        },
        "entity.SortType": {
            "type": "integer",
            "enum": [
                1,
                -1
            ],
            "x-enum-varnames": [
                "SORT_ASC",
                "SORT_DESC"
            ]
        },
        "entity.StatusInscribe": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
            ],
            "x-enum-comments": {
                "StatusInscribe_Minted": "5: mint success",
                "StatusInscribe_Minting": "4: minting",
                "StatusInscribe_NeedToRefund": "12: Need to refund BTC",
                "StatusInscribe_NotEnoughBalance": "11: balance not enough",
                "StatusInscribe_Pending": "0: pending: waiting for fund",
                "StatusInscribe_ReceivedFund": "1: received fund from user (buyer)",
                "StatusInscribe_SendingBTCFromSegwitAddrToOrdAddr": "2: sending btc from segwit address to ord address",
                "StatusInscribe_SendingNFTToUser": "6: sending nft to user",
                "StatusInscribe_SentBTCFromSegwitAddrToOrdAdd": "3: send btc from segwit address to ord address success, or ready to mint.",
                "StatusInscribe_SentNFTToUser": "7: send nft to user success: flow DONE",
                "StatusInscribe_TxMintFailed": "10: tx mint failed",
                "StatusInscribe_TxSendBTCFromSegwitAddrToOrdAddrFailed": "8: send btc from segwit address to ord address failed",
                "StatusInscribe_TxSendBTCToUserFailed": "9: send nft to user failed"
            },
            "x-enum-varnames": [
                "StatusInscribe_Pending",
                "StatusInscribe_ReceivedFund",
                "StatusInscribe_SendingBTCFromSegwitAddrToOrdAddr",
                "StatusInscribe_SentBTCFromSegwitAddrToOrdAdd",
                "StatusInscribe_Minting",
                "StatusInscribe_Minted",
                "StatusInscribe_SendingNFTToUser",
                "StatusInscribe_SentNFTToUser",
                "StatusInscribe_TxSendBTCFromSegwitAddrToOrdAddrFailed",
                "StatusInscribe_TxSendBTCToUserFailed",
                "StatusInscribe_TxMintFailed",
                "StatusInscribe_NotEnoughBalance",
                "StatusInscribe_NeedToRefund"
            ]
        },
        "entity.TokenPaidType": {
            "type": "string",
            "enum": [
                "eth",
                "btc"
            ],
            "x-enum-varnames": [
                "ETH",
                "BIT"
            ]
        },
        "entity.TokenStats": {
            "type": "object",
            "properties": {
                "price_int": {
                    "type": "integer"
                }
            }
        },
        "entity.TokenUri": {
            "type": "object",
            "properties": {
                "animationHtml": {
                    "type": "string"
                },
                "animation_url": {
                    "type": "string"
                },
                "attributes": {
                    "type": "string"
                },
                "block_number_minted": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "createdByCollectionInscription": {
                    "type": "boolean"
                },
                "createdMintActivity": {
                    "type": "boolean"
                },
                "createdTokenTx": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/entity.Users"
                },
                "creatorAddr": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genNFTAddr": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "inscribedBy": {
                    "type": "string"
                },
                "inscriptionIndex": {
                    "type": "string"
                },
                "isOnchain": {
                    "type": "boolean"
                },
                "minted_time": {
                    "type": "string"
                },
                "minterAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nftTokenId": {
                    "type": "string"
                },
                "order_inscription_index": {
                    "type": "integer"
                },
                "originalInscribedBy": {
                    "type": "string"
                },
                "owner": {
                    "description": "accept duplicated data to query more faster",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.Users"
                        }
                    ]
                },
                "ownerAddr": {
                    "type": "string"
                },
                "paidType": {
                    "$ref": "#/definitions/entity.TokenPaidType"
                },
                "parsed_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TokenUriAttr"
                    }
                },
                "parsed_attributes_str": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TokenUriAttrStr"
                    }
                },
                "parsed_image": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "project": {
                    "$ref": "#/definitions/entity.Projects"
                },
                "project_id": {
                    "type": "string"
                },
                "project_id_int": {
                    "type": "integer"
                },
                "seed": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/entity.TokenStats"
                },
                "syncedInscriptionInfo": {
                    "type": "boolean"
                },
                "thumbnail": {
                    "type": "string"
                },
                "thumbnailCapturedAt": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "token_id_int": {
                    "type": "integer"
                },
                "token_id_mini": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.TokenUriAttr": {
            "type": "object",
            "properties": {
                "trait_type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "entity.TokenUriAttrStr": {
            "type": "object",
            "properties": {
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity.TraitStat": {
            "type": "object",
            "properties": {
                "traitName": {
                    "type": "string"
                },
                "traitValuesStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TraitValueStat"
                    }
                }
            }
        },
        "entity.TraitValueStat": {
            "type": "object",
            "properties": {
                "rarity": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity.UserStats": {
            "type": "object",
            "properties": {
                "collection_created": {
                    "type": "integer"
                },
                "nft_minted": {
                    "type": "integer"
                },
                "output_minted": {
                    "type": "integer"
                },
                "total_mint": {
                    "type": "integer"
                },
                "total_minted": {
                    "type": "integer"
                },
                "volume_minted": {
                    "type": "number"
                }
            }
        },
        "entity.Users": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "enable_notification": {
                    "type": "boolean"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "is_updated_avatar": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "profile_social": {
                    "$ref": "#/definitions/entity.ProfileSocial"
                },
                "stats": {
                    "$ref": "#/definitions/entity.UserStats"
                },
                "verifiedAt": {
                    "type": "string"
                },
                "wallet_address": {
                    "description": "ID                      string        ` + "`" + `bson:\"id\" json:\"id,omitempty\"` + "`" + `",
                    "type": "string"
                },
                "wallet_address_btc": {
                    "description": "btc wallet artist receive royalty",
                    "type": "string"
                },
                "wallet_address_btc_taproot": {
                    "description": "btc wallet receive minted nft",
                    "type": "string"
                },
                "wallet_address_payment": {
                    "description": "eth wallet artist receive royalty",
                    "type": "string"
                },
                "wallet_type": {
                    "type": "string"
                }
            }
        },
        "nfts.InscribeBTC": {
            "type": "object",
            "properties": {
                "inscription_id": {
                    "type": "string"
                },
                "project_token_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "nfts.MoralisToken": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "block_number_minted": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "inscribe_btc": {
                    "$ref": "#/definitions/nfts.InscribeBTC"
                },
                "is_minted": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "string"
                },
                "metadata_obj": {
                    "description": "Custom",
                    "allOf": [
                        {
                            "$ref": "#/definitions/nfts.MoralisTokenMetadata"
                        }
                    ]
                },
                "name": {
                    "type": "string"
                },
                "owner_of": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_hash": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "token_uri": {
                    "type": "string"
                }
            }
        },
        "nfts.MoralisTokenMetadata": {
            "type": "object",
            "properties": {
                "animation_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "external_link": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "traits": {}
            }
        },
        "request.CaptureRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "display_url": {
                    "type": "string"
                }
            }
        },
        "request.CheckBalanceAddressReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "request.CompressImageReq": {
            "type": "object",
            "properties": {
                "compressPercents": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "imageUrl": {
                    "type": "string"
                }
            }
        },
        "request.CreateBTCProjectReq": {
            "type": "object",
            "properties": {
                "animationURL": {
                    "type": "string"
                },
                "captureImageTime": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "closeMintUnixTimestamp": {
                    "type": "integer"
                },
                "creatorAddrr": {
                    "type": "string"
                },
                "creatorAddrrBTC": {
                    "type": "string"
                },
                "creatorName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isFullChain": {
                    "type": "boolean"
                },
                "license": {
                    "type": "string"
                },
                "limitMintPerProcess": {
                    "type": "integer"
                },
                "limitSupply": {
                    "type": "integer"
                },
                "maxSupply": {
                    "type": "integer"
                },
                "mintPrice": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openMintUnixTimestamp": {
                    "type": "integer"
                },
                "reserveMintLimit": {
                    "type": "integer"
                },
                "reserveMintPrice": {
                    "type": "string"
                },
                "reservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "royalty": {
                    "type": "integer"
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "socialDiscord": {
                    "type": "string"
                },
                "socialInstagram": {
                    "type": "string"
                },
                "socialMedium": {
                    "type": "string"
                },
                "socialTwitter": {
                    "type": "string"
                },
                "socialWeb": {
                    "type": "string"
                },
                "styles": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thirdPartyScripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail": {
                    "type": "string"
                },
                "tokenDescription": {
                    "type": "string"
                },
                "zipLink": {
                    "type": "string"
                }
            }
        },
        "request.CreateBtcWalletAddressReq": {
            "type": "object",
            "properties": {
                "projectID": {
                    "type": "string"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "request.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CreateConfigRequest": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.CreateDaoArtistRequest": {
            "type": "object",
            "properties": {
                "twitter": {
                    "type": "string"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "request.CreateDaoProjectRequest": {
            "type": "object",
            "required": [
                "project_ids"
            ],
            "properties": {
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.CreateETHProjectReq": {
            "type": "object",
            "properties": {
                "animationURL": {
                    "type": "string"
                },
                "captureImageTime": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "closeMintUnixTimestamp": {
                    "type": "integer"
                },
                "commitTxHash": {
                    "type": "string"
                },
                "creatorAddrr": {
                    "type": "string"
                },
                "creatorAddrrBTC": {
                    "type": "string"
                },
                "creatorName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isFullChain": {
                    "type": "boolean"
                },
                "license": {
                    "type": "string"
                },
                "limitMintPerProcess": {
                    "type": "integer"
                },
                "limitSupply": {
                    "type": "integer"
                },
                "maxSupply": {
                    "type": "integer"
                },
                "mintPrice": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openMintUnixTimestamp": {
                    "type": "integer"
                },
                "reserveMintLimit": {
                    "type": "integer"
                },
                "reserveMintPrice": {
                    "type": "string"
                },
                "reservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "revealTxHash": {
                    "type": "string"
                },
                "royalty": {
                    "type": "integer"
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "socialDiscord": {
                    "type": "string"
                },
                "socialInstagram": {
                    "type": "string"
                },
                "socialMedium": {
                    "type": "string"
                },
                "socialTwitter": {
                    "type": "string"
                },
                "socialWeb": {
                    "type": "string"
                },
                "styles": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thirdPartyScripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail": {
                    "type": "string"
                },
                "tokenDescription": {
                    "type": "string"
                },
                "txHash": {
                    "type": "string"
                },
                "txHex": {
                    "type": "string"
                },
                "zipLink": {
                    "type": "string"
                }
            }
        },
        "request.CreateEthWalletAddressReq": {
            "type": "object",
            "properties": {
                "projectID": {
                    "type": "string"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "request.CreateFcmDataTest": {
            "type": "object",
            "required": [
                "data",
                "device_type"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "device_type": {
                    "type": "string"
                },
                "registration_token": {
                    "type": "string"
                }
            }
        },
        "request.CreateFcmRequest": {
            "type": "object",
            "required": [
                "device_type",
                "registration_token"
            ],
            "properties": {
                "device_type": {
                    "type": "string"
                },
                "registration_token": {
                    "type": "string"
                }
            }
        },
        "request.CreateInscribeBtcReq": {
            "type": "object",
            "properties": {
                "fee_rate": {
                    "type": "integer"
                },
                "file": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payType": {
                    "type": "string"
                },
                "tokenAddress": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "request.CreateMultipartUploadRequest": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                }
            }
        },
        "request.CreateProposalReq": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "receiverAddress": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "request.CreateWhitelistedEthWalletAddressReq": {
            "type": "object",
            "properties": {
                "projectID": {
                    "type": "string"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "request.DeveloperCreateInscribeBtcReq": {
            "type": "object",
            "properties": {
                "feeRate": {
                    "type": "integer"
                },
                "file": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokenAddress": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "request.FileResize": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                }
            }
        },
        "request.GenerateMessageRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "walletType": {
                    "type": "string"
                }
            }
        },
        "request.GetApiKeyReq": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "g-recaptcha-response": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.ListNftIdsReq": {
            "type": "object",
            "properties": {
                "inscriptionIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "string"
                },
                "seller_address": {
                    "type": "string"
                },
                "seller_ord_address": {
                    "type": "string"
                }
            }
        },
        "request.ProfileSocial": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "string"
                },
                "etherScan": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "request.ReportProjectReq": {
            "type": "object",
            "properties": {
                "originalLink": {
                    "type": "string"
                }
            }
        },
        "request.SendNewBidNotifyRequest": {
            "type": "object",
            "properties": {
                "bid_price": {
                    "type": "number"
                },
                "collector_redirect_to": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "wallet_address": {
                    "type": "string"
                }
            }
        },
        "request.UpdateBTCProjectCategoriesReq": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.UpdateBTCProjectReq": {
            "type": "object",
            "properties": {
                "captureImageTime": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "limitMintPerProcess": {
                    "type": "integer"
                },
                "maxSupply": {
                    "type": "integer"
                },
                "mintPrice": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "reserveMintLimit": {
                    "type": "integer"
                },
                "reserveMintPrice": {
                    "type": "string"
                },
                "reservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "royalty": {
                    "type": "integer"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "request.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enableNotification": {
                    "type": "boolean"
                },
                "profileSocial": {
                    "$ref": "#/definitions/request.ProfileSocial"
                },
                "walletAddressBtc": {
                    "type": "string"
                },
                "walletAddressPayment": {
                    "type": "string"
                }
            }
        },
        "request.UpdateProjectReq": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                }
            }
        },
        "request.UpdateTokenThumbnailReq": {
            "type": "object",
            "properties": {
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "request.UpdateTokentReq": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                }
            }
        },
        "request.UpsertRedisRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.VerifyMessageRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "addressBtc": {
                    "type": "string"
                },
                "addressBtcSegwit": {
                    "type": "string"
                },
                "addressPayment": {
                    "type": "string"
                },
                "ethSignature": {
                    "type": "string"
                },
                "messagePrefix": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "request.VoteDaoArtistRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/dao_artist_voted.Status"
                }
            }
        },
        "request.VoteDaoProjectRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/dao_project_voted.Status"
                }
            }
        },
        "request.WithDrawItemRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "id": {
                    "description": "referal  (referal: refereeID, project: tokenID)",
                    "type": "string"
                },
                "paymentType": {
                    "description": "referal or project",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.ActionDaoArtist": {
            "type": "object",
            "properties": {
                "can_vote": {
                    "type": "boolean"
                }
            }
        },
        "response.ActionDaoProject": {
            "type": "object",
            "properties": {
                "can_vote": {
                    "type": "boolean"
                }
            }
        },
        "response.CaptureResponse": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                }
            }
        },
        "response.CategoryResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.ConfigResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.DaoArtist": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/response.ActionDaoArtist"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "dao_artist_voted": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DaoArtistVoted"
                    }
                },
                "deleted_at": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "seq_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/dao_artist.Status"
                },
                "total_report": {
                    "type": "integer"
                },
                "total_verify": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/response.UserForDao"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "response.DaoArtistVoted": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "dao_project_id": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/dao_artist_voted.Status"
                }
            }
        },
        "response.DaoProject": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/response.ActionDaoProject"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "dao_project_voted": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DaoProjectVoted"
                    }
                },
                "deleted_at": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/response.ProjectForDaoProject"
                },
                "project_id": {
                    "type": "string"
                },
                "seq_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/dao_project.Status"
                },
                "total_against": {
                    "type": "integer"
                },
                "total_vote": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/response.UserForDao"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "response.DaoProjectVoted": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "dao_project_id": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/dao_project_voted.Status"
                }
            }
        },
        "response.FileRes": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "uploadedBy": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "response.FileResponse": {
            "type": "object",
            "properties": {
                "uploadId": {
                    "type": "string"
                }
            }
        },
        "response.GeneratedMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.InscribeBtcResp": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "balance": {
                    "description": "balance after check",
                    "type": "string"
                },
                "estFeeInfo": {},
                "fileURI": {
                    "description": "FileURI will be mount if OrdAddress get all amount",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inscriptionID": {
                    "description": "tokenID in ETH",
                    "type": "string"
                },
                "isConfirm": {
                    "description": "default: false, if OrdAddress get all amount it will be set true",
                    "type": "boolean"
                },
                "mintFee": {
                    "type": "string"
                },
                "ordAddress": {
                    "description": "address is generated from ORD service, which receive all amount",
                    "type": "string"
                },
                "segwitAddress": {
                    "type": "string"
                },
                "sentTokenFee": {
                    "type": "string"
                },
                "timeoutAt": {
                    "type": "string"
                },
                "userAddress": {
                    "description": "user's wallet address from FE",
                    "type": "string"
                }
            }
        },
        "response.InscribeInfoResp": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "contentLength": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "genesisFee": {
                    "type": "string"
                },
                "genesisHeight": {
                    "type": "string"
                },
                "genesisTransaction": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "offset": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "outputValue": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "sat": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.InternalTokenTraitsResp": {
            "type": "object",
            "properties": {
                "attributes": {}
            }
        },
        "response.InternalTokenURIResp": {
            "type": "object",
            "properties": {
                "animationUrl": {
                    "type": "string"
                },
                "attributes": {},
                "buyable": {
                    "description": "for buyable:",
                    "type": "boolean"
                },
                "creator": {
                    "$ref": "#/definitions/response.ProfileResponse"
                },
                "description": {
                    "type": "string"
                },
                "genNFTAddr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "inscribedBy": {
                    "type": "string"
                },
                "inscriptionIndex": {
                    "type": "string"
                },
                "isCompleted": {
                    "type": "boolean"
                },
                "listingDetail": {
                    "$ref": "#/definitions/structure.MarketplaceNFTDetail"
                },
                "mintedTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nftTokenId": {
                    "type": "string"
                },
                "orderID": {
                    "type": "string"
                },
                "orderInscriptionIndex": {
                    "type": "integer"
                },
                "ordinalsData": {
                    "$ref": "#/definitions/response.OrdinalsData"
                },
                "owner": {
                    "$ref": "#/definitions/response.ProfileResponse"
                },
                "ownerAddr": {
                    "type": "string"
                },
                "priceBTC": {
                    "type": "string"
                },
                "priceETH": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "project": {
                    "$ref": "#/definitions/response.ProjectResp"
                },
                "seed": {
                    "type": "string"
                },
                "sell_verified": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "#/definitions/response.TokenStat"
                },
                "thumbnail": {
                    "type": "string"
                },
                "tokenID": {
                    "type": "string"
                }
            }
        },
        "response.JsonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/response.RespondErr"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.MultipartUploadResponse": {
            "type": "object",
            "properties": {
                "fileUrl": {
                    "type": "string"
                }
            }
        },
        "response.NftMintingDetail": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "indexReserve": {
                    "type": "integer"
                }
            }
        },
        "response.OrdinalsData": {
            "type": "object",
            "properties": {
                "block": {
                    "type": "integer"
                },
                "contentLength": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "sat": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.ProfileResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "canCreateProposal": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "profileSocial": {
                    "$ref": "#/definitions/response.ProfileSocial"
                },
                "proposal": {
                    "$ref": "#/definitions/response.DaoArtist"
                },
                "walletAddress": {
                    "type": "string"
                },
                "walletAddressBtc": {
                    "type": "string"
                },
                "walletAddressBtcTaproot": {
                    "type": "string"
                },
                "walletAddressPayment": {
                    "type": "string"
                }
            }
        },
        "response.ProfileSocial": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "string"
                },
                "etherScan": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "twitterVerified": {
                    "type": "boolean"
                },
                "web": {
                    "type": "string"
                }
            }
        },
        "response.ProjectForDaoProject": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "creator_by": {
                    "type": "string"
                },
                "creator_name": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_hidden": {
                    "type": "boolean"
                },
                "max_supply": {
                    "type": "integer"
                },
                "mint_price": {
                    "type": "string"
                },
                "mint_price_eth": {
                    "type": "string"
                },
                "minting_info": {
                    "$ref": "#/definitions/response.ProjectMintingInfo"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "response.ProjectMintingInfo": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "index_reverse": {
                    "type": "integer"
                }
            }
        },
        "response.ProjectResp": {
            "type": "object",
            "properties": {
                "animationHtml": {
                    "type": "string"
                },
                "auctionWinnerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.AuctionWinnerList"
                    }
                },
                "blockNumberMinted": {
                    "type": "string"
                },
                "btcFloorPrice": {
                    "type": "integer"
                },
                "canCreateProposal": {
                    "type": "boolean"
                },
                "captureThumbnailDelayTime": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "closeMintUnixTimestamp": {
                    "type": "integer"
                },
                "completeTime": {
                    "type": "integer"
                },
                "contractAddress": {
                    "type": "string"
                },
                "creatorAddr": {
                    "type": "string"
                },
                "creatorAddrrBTC": {
                    "type": "string"
                },
                "creatorProfile": {
                    "$ref": "#/definitions/response.ProfileResponse"
                },
                "desc": {
                    "type": "string"
                },
                "editableIsHidden": {
                    "type": "boolean"
                },
                "fileExtension": {
                    "type": "string"
                },
                "fromAuthentic": {
                    "type": "boolean"
                },
                "genNFTAddr": {
                    "type": "string"
                },
                "htmlFile": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "inscribedBy": {
                    "type": "string"
                },
                "isFullChain": {
                    "type": "boolean"
                },
                "isGenerative": {
                    "description": "art by generative code or html file",
                    "type": "boolean"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "isReviewing": {
                    "type": "boolean"
                },
                "isSynced": {
                    "type": "boolean"
                },
                "itemDesc": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "limitMintPerProcess": {
                    "type": "integer"
                },
                "maxFileSize": {
                    "type": "integer"
                },
                "maxSupply": {
                    "type": "integer"
                },
                "mintPrice": {
                    "type": "string"
                },
                "mintPriceAddr": {
                    "type": "string"
                },
                "mintPriceEth": {
                    "type": "string"
                },
                "mintedTime": {
                    "type": "string"
                },
                "mintingInfo": {
                    "$ref": "#/definitions/response.NftMintingDetail"
                },
                "name": {
                    "type": "string"
                },
                "networkFee": {
                    "type": "string"
                },
                "networkFeeEth": {
                    "type": "string"
                },
                "nftTokenId": {
                    "type": "string"
                },
                "openMintUnixTimestamp": {
                    "type": "integer"
                },
                "ordinalsTx": {
                    "type": "string"
                },
                "ownerOf": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "projectURI": {
                    "type": "string"
                },
                "proposalSeqId": {
                    "type": "integer"
                },
                "reportUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ReportProject"
                    }
                },
                "reserveMintLimit": {
                    "type": "integer"
                },
                "reserveMintPrice": {
                    "type": "string"
                },
                "reservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "royalty": {
                    "type": "integer"
                },
                "scriptType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "social": {},
                "stats": {
                    "$ref": "#/definitions/response.ProjectStatResp"
                },
                "status": {
                    "type": "boolean"
                },
                "styles": {
                    "type": "string"
                },
                "tokenAddress": {
                    "type": "string"
                },
                "tokenID": {
                    "type": "string"
                },
                "totalImages": {
                    "type": "integer"
                },
                "traitStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TraitStat"
                    }
                },
                "txHash": {
                    "description": "art by generative code or html file",
                    "type": "string"
                },
                "txHex": {
                    "description": "art by generative code or html file",
                    "type": "string"
                },
                "whiteListEthContracts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.ProjectStatResp": {
            "type": "object",
            "properties": {
                "bestMakeOfferPrice": {
                    "type": "string"
                },
                "floorPrice": {
                    "type": "string"
                },
                "listedPercent": {
                    "type": "integer"
                },
                "totalTradingVolumn": {
                    "type": "string"
                },
                "uniqueOwnerCount": {
                    "type": "integer"
                }
            }
        },
        "response.RedisResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "response.ReportProject": {
            "type": "object",
            "properties": {
                "originalLink": {
                    "type": "string"
                },
                "reportUserAddress": {
                    "type": "string"
                }
            }
        },
        "response.RespondErr": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TokenStat": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "string"
                }
            }
        },
        "response.TokenTraitsResp": {
            "type": "object",
            "properties": {
                "attributes": {}
            }
        },
        "response.TokenURIResp": {
            "type": "object",
            "properties": {
                "animation_url": {
                    "type": "string"
                },
                "attributes": {},
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.TraitStat": {
            "type": "object",
            "properties": {
                "traitName": {
                    "type": "string"
                },
                "traitValuesStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TraitValueStat"
                    }
                }
            }
        },
        "response.TraitValueStat": {
            "type": "object",
            "properties": {
                "rarity": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.UserForDao": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "profile_social": {
                    "$ref": "#/definitions/response.ProfileSocial"
                },
                "stats": {
                    "$ref": "#/definitions/response.UserStats"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_address_btc": {
                    "type": "string"
                },
                "wallet_address_btc_taproot": {
                    "type": "string"
                },
                "wallet_address_payment": {
                    "type": "string"
                }
            }
        },
        "response.UserStats": {
            "type": "object",
            "properties": {
                "collection_created": {
                    "type": "integer"
                },
                "total_mint": {
                    "type": "integer"
                },
                "total_minted": {
                    "type": "integer"
                }
            }
        },
        "response.VerifyResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "structure.DeflateDataResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "structure.FileContentReq": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "deflate": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "string"
                }
            }
        },
        "structure.MarketplaceNFTDetail": {
            "type": "object",
            "properties": {
                "buyable": {
                    "type": "boolean"
                },
                "collection_id": {
                    "description": "for filter",
                    "type": "string"
                },
                "collection_name": {
                    "type": "string"
                },
                "contentLength": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "inscription": {
                    "$ref": "#/definitions/entity.TokenUri"
                },
                "inscriptionID": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                },
                "inscription_index": {
                    "type": "string"
                },
                "inscription_name": {
                    "type": "string"
                },
                "isCompleted": {
                    "type": "boolean"
                },
                "isConfirmed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "orderID": {
                    "type": "string"
                },
                "payType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "paymentListingInfo": {
                    "description": "paytype:",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/structure.PaymentInfoForBuyOrder"
                    }
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "structure.MinifyDataResp": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/structure.FileContentReq"
                    }
                }
            }
        },
        "structure.PaymentInfoForBuyOrder": {
            "type": "object",
            "properties": {
                "paymentAddress": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "structure.UpdateProjectHash": {
            "type": "object",
            "properties": {
                "commitTxHash": {
                    "type": "string"
                },
                "contractAddress": {
                    "type": "string"
                },
                "revealTxHash": {
                    "type": "string"
                },
                "txHash": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/rederinghub.io/v1",
	Schemes:          []string{},
	Title:            "Generative.xyz APIs",
	Description:      "This is a sample server Generative.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
