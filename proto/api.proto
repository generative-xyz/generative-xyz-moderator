syntax = "proto3";

package api.renderinghub.io;
option go_package = "renderinghub.io/api;api";

import "google/api/annotations.proto";
import "health.proto";
import "template.proto";
import "rendered-nft.proto";
import "auth.proto";
import "token.proto";

service ApiService {
  rpc Live (LiveRequest) returns (LiveResponse) {
    option (google.api.http) = {
      get: "/api/v1/health/live"
    };
  }
  rpc Ping (PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/api/v1/ping"
    };
  }
  
  rpc GetAuthNonce(GetNonceMessageReq) returns (GetNonceMessageResp) {
    option (google.api.http) = {
      post: '/api/v1/auth/nonce',
      body: '*'
    };
  }
  
  rpc VerifyAuthNounce(VerifyNonceMessageReq) returns (VerifyNonceMessageResp) {
    option (google.api.http) = {
      post: '/api/v1/auth/nonce/verify',
      body: '*'
    };
  }

  rpc GetProfile(UserProfileReq) returns (UserProfileResp) {
    option (google.api.http) = {
      get: '/api/v1/profile'
    };
  }
  
  rpc UpdateProfile(UpdateUserProfileReq) returns (UserProfileResp) {
    option (google.api.http) = {
      put: '/api/v1/profile',
      body: '*'
    };
  }

  rpc GetToken(GetTokenMessageReq) returns (GetTokenMessageResp) {
    option (google.api.http) = {
      get: '/api/token/{contract_addr}/{token_id}',
    };
  }

}
