syntax = "proto3";

package api.renderinghub.io;
option go_package = "renderinghub.io/api;api";

message GetTemplateRequest {}

enum TemplateType {
  UNKNOWN_TEMPLATE_TYPE = 0;
  JS_TEMPLATE_TYPE = 1;
  PYTHON_TEMPLATE_TYPE = 2;
}

message Template {
  string name = 1;
  string token_id = 2;
  string symbol = 3;
  string metadata_image = 4;
}

message TemplateParam {
  string typeI = 1;
  uint32 max = 2;
  uint32 min = 3;
  uint32 decimal = 4;
  repeated double available_decimal = 5;
  repeated string available_string = 6;
  optional uint32 value = 7;
}

message NftInfo {
  int32 network_type = 1;
  string chain_id = 2;
  string token_id = 3;
  string contract_address = 4;
}

message GetTemplateResponse {
  repeated Template template = 1;
  int32 total = 2;
}

message GetTemplateDetailRequest {
  string token_id = 1;
  string chain_id = 2;
  string contract_address = 3;
}

message GetTemplateDetailResponse {
  NftInfo nft_info = 1;
  string fee = 2;
  string fee_token = 3;
  string mint_max_supply = 4;
  string mint_total_supply = 5;
  string script = 6;
  uint32 script_type = 7;
  string creator = 8;
  string custom_uri = 9;
  string project_name = 10;
  bool client_seed = 11;
  ParamsTemplate params_template = 12;
  string minter_nft_info = 13;
}

message Param {
  uint32 type_value = 1;
  string  max = 2;
  string  min = 3;
  uint32  decimal = 4;
  repeated string available_values = 5;
  string value = 6;
  bool editable = 7;
}

message ParamsTemplate {
  string seed = 1;
  repeated Param params = 2;
}

message TemplateRenderingRequest {
  string token_id = 1;
  ParamsTemplate params = 2;
  string chain_id = 3;
  string contract_address = 4;
}

message TemplateRenderingResponse {
  string glb = 1;
  string image = 2;
  string video = 3;
}
